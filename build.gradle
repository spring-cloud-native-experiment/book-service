buildscript {
    ext {
        springBootVersion = '1.4.0.RELEASE'
        asciiDoctorVersion = '1.5.2'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.asciidoctor:asciidoctor-gradle-plugin:${asciiDoctorVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'org.asciidoctor.convert'

ext {
    snippetsDir = file('build/generated-snippets')
    assertjVersion = '3.5.2'
    restAssuredVersion = '2.9.0'
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    attributes 'snippets': snippetsDir
    inputs.dir snippetsDir
    dependsOn test
}

jar {
    baseName = 'book-service'
    version = '0.0.1-SNAPSHOT'
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Brixton.SR4"
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-actuator-docs')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.projectlombok:lombok')
    compile('org.springframework.boot:spring-boot-starter-validation')
    compile('org.springframework.cloud:spring-cloud-starter-eureka')
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.cloud:spring-cloud-starter-oauth2')

    runtime('mysql:mysql-connector-java')

    testRuntime('com.h2database:h2')
    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude group: "org.assertj"
    }
    testCompile('org.springframework.boot:spring-boot-test-autoconfigure')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
    testCompile("org.assertj:assertj-core:${assertjVersion}")
    testCompile("com.jayway.restassured:rest-assured:${restAssuredVersion}")
}

eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}
